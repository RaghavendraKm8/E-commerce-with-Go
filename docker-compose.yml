services:
  db:
    image: postgres:16
    container_name: ecom_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01-init_root.sql:ro
      - ./services/db/init.sql:/docker-entrypoint-initdb.d/02-init_services.sql:ro
    ports:
      - "5432:5432"
    networks:
      - backend

  usersvc:
    build: ./usersvc
    container_name: usersvc
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=usersdb
    ports:
      - "8081:8080"
    networks:
      - backend

  productsvc:
    build: ./productsvc
    container_name: productsvc
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=productsdb
    ports:
      - "8082:8080"
    networks:
      - backend

  ordersvc:
    build: ./ordersvc
    container_name: ordersvc
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ordersdb
    ports:
      - "8083:8080"
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
